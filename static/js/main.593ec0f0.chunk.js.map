{"version":3,"sources":["assets/styles/GlobalStyles.js","components/MoreInfoAboutWeather.js","components/WeatherInfo.js","components/Button.js","assets/GpsIcon.js","components/ChooseCityInput.js","components/WeatherWidget.js","helpers/helpers.js","assets/styles/theme.js","assets/images/sky-bg.png","App.js","i18n.js","index.js"],"names":["GlobalStyles","createGlobalStyle","DetailsInfoWeather","styled","div","Details","MoreInfoAboutWeather","main","pressure","temp_max","temp_min","humidity","speed","wind","t","useTranslation","toFixed","WeatherDiv","MainInfoWeather","theme","fonts","large","StyledNameCity","h1","Degrees","StyledImg","img","WeatherSections","ShowMoreClick","p","WeatherInfo","data","name","weather","useState","showMore","setShowMore","temp","description","alt","src","icon","onClick","ButtonStyles","button","colors","mainFontColor","active","Button","children","activLanguage","StyledSvgIcon","svg","GpsIcon","props","xmlns","viewBox","xmlSpace","d","StyledInput","input","InputWrapper","WeatherInfoError","ChooseCityInput","onChange","setMyLocation","dataStatus","transKey","type","placeholder","e","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","long","longitude","Navigation","Sections","WeatherWidget","language","setLanguage","city","setCity","setData","myLocation","i18n","func","deps","didMount","useRef","useEffect","current","useDidMountEffect","getWeather","changeLanguage","toLowerCase","location","BASE_URL","API_KEY","String","process","queryUrl","fetch","then","response","json","catch","console","log","map","lang","index","target","innerText","value","cod","message","clickedBtnColor","bgColor","buttonsColor","small","Wrapper","App","use","initReactI18next","init","resources","pl","translation","ButtonName","InputPlaceholder","Pressure","Wind","MaxTemp","MinTemp","Humidity","ShowMore","ShowLess","en","de","lng","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.593ec0f0.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\nbody {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n    background-color: #bfdbec;\r\n `;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst DetailsInfoWeather = styled.div`\r\n  margin-top: 30px;\r\n  display: flex;\r\n  width: 100%;\r\n  p {\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n  }\r\n  span {\r\n    font-size: 22px;\r\n  }\r\n`;\r\nconst Details = styled.div`\r\n  width: 33%;\r\n\r\n  span {\r\n    font-size: 22px;\r\n  }\r\n`;\r\n\r\nexport const MoreInfoAboutWeather = ({\r\n  main: { pressure, temp_max, temp_min, humidity },\r\n  wind: { speed },\r\n}) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <DetailsInfoWeather>\r\n      <Details>\r\n        <p>\r\n          {t('Pressure')} <span>{pressure}</span> hPa\r\n        </p>\r\n        <p>\r\n          {t('Wind')} <span>{speed}</span> km/h\r\n        </p>\r\n      </Details>\r\n      <Details>\r\n        <p>\r\n          {t('MaxTemp')} <span>{temp_max.toFixed(1)}</span> °C\r\n        </p>\r\n        <p>\r\n          {t('MinTemp')} <span>{temp_min.toFixed(1)}</span> °C\r\n        </p>\r\n      </Details>\r\n      <Details>\r\n        <p>\r\n          {t('Humidity')} <span>{humidity}</span> %\r\n        </p>\r\n      </Details>\r\n    </DetailsInfoWeather>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { MoreInfoAboutWeather } from './MoreInfoAboutWeather';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst WeatherDiv = styled.div`\r\n  margin-top: 70px;\r\n  text-align: center;\r\n  align-items: center;\r\n`;\r\nconst MainInfoWeather = styled.div`\r\n  display: flex;\r\n  p {\r\n    font-weight: 700;\r\n    font-size: ${({ theme }) => theme.fonts.large};\r\n  }\r\n`;\r\nconst StyledNameCity = styled.h1`\r\n  font-size: 30px;\r\n  width: 33%;\r\n  margin: 0;\r\n`;\r\nconst Degrees = styled.h1`\r\n  font-size: 40px;\r\n  margin: 0;\r\n`;\r\nconst StyledImg = styled.img`\r\n  width: 100px;\r\n  height: auto;\r\n`;\r\nconst WeatherSections = styled.div`\r\n  width: 35%;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst ShowMoreClick = styled.p`\r\n  display: flex;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  margin: 30px auto 0;\r\n  font-weight: bold;\r\n  width: max-content;\r\n  border-bottom: 1px solid black;\r\n`;\r\n\r\nexport const WeatherInfo = ({ data: { name, weather, main, wind } }) => {\r\n  const { t } = useTranslation();\r\n  const [showMore, setShowMore] = useState(false);\r\n\r\n  return (\r\n    <WeatherDiv>\r\n      <MainInfoWeather>\r\n        <StyledNameCity>{name}</StyledNameCity>\r\n        <WeatherSections>\r\n          <Degrees>{main.temp.toFixed(1)}°C</Degrees>\r\n          <p>{weather[0].description}</p>\r\n        </WeatherSections>\r\n        <WeatherSections>\r\n          <StyledImg\r\n            alt=\"\"\r\n            src={`https://openweathermap.org/img/wn/${weather[0].icon}.png`}\r\n          />\r\n        </WeatherSections>\r\n      </MainInfoWeather>\r\n      {!showMore ? (\r\n        <ShowMoreClick onClick={() => setShowMore(true)}>\r\n          {t('ShowMore')}\r\n        </ShowMoreClick>\r\n      ) : (\r\n        <ShowMoreClick onClick={() => setShowMore(false)}>\r\n          {t('ShowLess')}\r\n        </ShowMoreClick>\r\n      )}\r\n      {showMore && (\r\n        <MoreInfoAboutWeather main={main} wind={wind}></MoreInfoAboutWeather>\r\n      )}\r\n    </WeatherDiv>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonStyles = styled.button`\r\n  margin: 0 5px;\r\n  color: ${({ theme }) => theme.colors.mainFontColor};\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  font-weight: 700;\r\n  border-bottom: ${({ active }) => active && '1px solid black'};\r\n`;\r\n\r\nexport const Button = ({ children, onClick, activLanguage }) => {\r\n  return (\r\n    <>\r\n      <ButtonStyles active={children === activLanguage} onClick={onClick}>\r\n        {children}\r\n      </ButtonStyles>\r\n    </>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSvgIcon = styled.svg`\r\n  cursor: pointer;\r\n  width: 20px;\r\n  height: 20px;\r\n  position: absolute;\r\n  right: 10px;\r\n  fill: ${({ theme }) => theme.colors.mainFontColor};\r\n`;\r\nexport const GpsIcon = (props) => {\r\n  return (\r\n    <StyledSvgIcon\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 1000 1000\"\r\n      xmlSpace=\"preserve\"\r\n      {...props}\r\n    >\r\n      <path d=\"M494.24 10.71c-1.16.46-5.1 1.39-8.57 2.08-9.03 2.08-22.7 14.83-27.57 25.71-3.71 7.88-4.4 15.75-4.4 56.76v47.49l-22.47 4.17c-31.27 5.79-59.54 15.52-92.2 31.74-95.91 47.95-164.48 134.36-190.19 239.76-3.01 12.74-5.56 25.95-5.56 29.42v6.49H97.64c-25.25 0-49.81 1.16-54.67 2.55-10.19 2.78-23.63 13.9-28.73 23.86-9.73 18.76-2.08 45.87 16.22 58.61l9.27 6.49L90.69 547l50.96 1.16 5.1 25.48c22.47 108.65 93.36 200.62 192.97 250.19 29.19 14.36 59.54 25.02 87.8 30.35 11.12 2.09 21.78 4.17 23.4 4.63 2.09.7 2.78 12.05 2.78 47.26 0 50.5 1.39 57.45 13.44 70.19 9.5 9.96 18.76 13.9 32.9 13.9 14.13 0 23.4-3.94 32.89-13.9 12.05-12.74 13.44-19.69 13.44-70.19 0-35.21.69-46.79 3.01-47.26 1.39-.46 11.82-2.55 22.94-4.63 41.47-7.64 89.19-27.57 127.41-53.05C779.87 747.61 835 665.14 854 570.16l4.4-22.01 49.57-1.16c29.42-.7 51.89-2.32 55.37-3.71 7.18-3.24 18.07-13.9 22.01-21.78 11.81-23.4.23-53.05-24.79-63.47-6.95-3.01-18.53-3.71-56.29-3.71h-47.49v-6.49c0-3.47-2.55-16.68-5.56-29.42-16.22-66.25-48.88-124.86-96.6-172.35-50.27-50.5-118.38-86.64-185.56-99.15l-22.7-4.17V95.25c0-53.51-1.62-60-16.91-73.44-10.42-9.01-26.41-14.11-35.21-11.1zm58.61 226.79c95.44 20.39 171.2 87.57 202 179.3 41.7 124.63-15.52 263.16-133.2 322.93-36.83 18.76-68.8 27.1-111.42 28.96-74.59 3.48-145.71-24.55-199.69-78.53-103.32-103.09-105.4-267.79-5.1-373.43 40.08-42.16 93.59-71.12 147.1-79.92 9.03-1.39 18.76-3.01 22.01-3.47 11.58-2.09 61.85.69 78.3 4.16z\" />\r\n      <path d=\"M466.44 349.16c-8.8 2.08-25.02 7.88-35.91 12.97-15.75 7.64-23.4 13.2-39.61 29.42-16.22 16.22-21.78 23.86-29.65 40.08-21.78 45.17-22.01 93.82-.46 137.37 57.45 115.83 220.77 115.83 278.45 0 21.55-43.55 21.31-92.2-.46-137.37-13.44-28.03-41.23-55.6-69.27-69.27-32.9-15.98-67.88-20.61-103.09-13.2z\" />\r\n    </StyledSvgIcon>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { GpsIcon } from 'assets/GpsIcon';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst StyledInput = styled.input`\r\n  margin: 0 10px;\r\n  width: 250px;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-bottom: 3px solid #ffffffcc;\r\n  outline: none;\r\n  color: #111c46;\r\n  font-size: ${({ theme }) => theme.fonts.large};\r\n  position: relative;\r\n\r\n  ::placeholder {\r\n    color: #111c46;\r\n  }\r\n`;\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n`;\r\nconst WeatherInfoError = styled.p`\r\n  margin: 0 auto;\r\n  font-size: 12px;\r\n  color: red;\r\n  font-weight: bold;\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: fit-content;\r\n`;\r\n\r\nexport const ChooseCityInput = ({\r\n  onChange,\r\n  setMyLocation,\r\n  dataStatus = 200,\r\n  transKey,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const getLocation = () => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      setMyLocation({\r\n        lat: position.coords.latitude,\r\n        long: position.coords.longitude,\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <InputWrapper>\r\n      <StyledInput\r\n        type=\"text\"\r\n        placeholder={t('InputPlaceholder')}\r\n        onChange={(e) => onChange(e)}\r\n      />\r\n      <GpsIcon onClick={getLocation} />\r\n      {dataStatus !== 200 && <WeatherInfoError>{t(transKey)}</WeatherInfoError>}\r\n    </InputWrapper>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { WeatherInfo } from 'components/WeatherInfo';\r\nimport { Button } from 'components/Button';\r\nimport { ChooseCityInput } from 'components/ChooseCityInput';\r\nimport { useDidMountEffect } from 'helpers/helpers';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Navigation = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst Sections = styled.div`\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WeatherWidget = () => {\r\n  const [language, setLanguage] = useState('PL');\r\n  const [city, setCity] = useState('');\r\n  const [data, setData] = useState();\r\n  const [myLocation, setMyLocation] = useState(false);\r\n  const { t, i18n } = useTranslation();\r\n\r\n  useDidMountEffect(() => {\r\n    myLocation && getWeather(myLocation);\r\n    city && getWeather();\r\n    i18n.changeLanguage(language.toLowerCase());\r\n  }, [language, myLocation]);\r\n\r\n  const handleWeather = () => {\r\n    getWeather();\r\n    setMyLocation(false);\r\n  };\r\n\r\n  const getWeather = (location) => {\r\n    const BASE_URL = 'https://api.openweathermap.org';\r\n    const API_KEY = String(process.env.REACT_APP_WEATHER_API_KEY);\r\n\r\n    let queryUrl = location\r\n      ? `${BASE_URL}/data/2.5/weather?lat=${location.lat}&lon=${\r\n          location.long\r\n        }&lang=${language.toLowerCase()}&appid=${API_KEY}&units=metric`\r\n      : `${BASE_URL}/data/2.5/weather?q=${city}&lang=${language.toLowerCase()}&appid=${API_KEY}&units=metric`;\r\n\r\n    fetch(queryUrl)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Navigation>\r\n        <Sections>\r\n          {['PL', 'EN', 'DE'].map((lang, index) => (\r\n            <Button\r\n              onClick={(e) => setLanguage(e.target.innerText)}\r\n              key={index}\r\n              activLanguage={language}\r\n            >\r\n              {lang}\r\n            </Button>\r\n          ))}\r\n        </Sections>\r\n        <Sections>\r\n          <ChooseCityInput\r\n            onChange={(e) => setCity(e.target.value)}\r\n            setMyLocation={setMyLocation}\r\n            dataStatus={data && data.cod}\r\n            language={language}\r\n            transKey={data && data.message}\r\n          />\r\n          <Button onClick={handleWeather}>{t('ButtonName')}</Button>\r\n        </Sections>\r\n      </Navigation>\r\n      {data && data.cod === 200 && <WeatherInfo data={data} />}\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport const useDidMountEffect = (func, deps) => {\r\n  const didMount = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (didMount.current) {\r\n      func();\r\n    } else {\r\n      didMount.current = true;\r\n    }\r\n    // eslint-disable-next-line\r\n  }, deps);\r\n};\r\n","export const theme = {\r\n  colors: {\r\n    mainFontColor: '#04033a',\r\n    clickedBtnColor: '#ffb6c1',\r\n    bgColor: '#E5E5E5',\r\n    buttonsColor: '#64baef',\r\n  },\r\n  fonts: {\r\n    large: '17px',\r\n    small: '12px',\r\n  },\r\n};\r\n","export default __webpack_public_path__ + \"static/media/sky-bg.829a7aa1.png\";","import React from 'react';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport { GlobalStyles } from 'assets/styles/GlobalStyles';\r\nimport { WeatherWidget } from 'components/WeatherWidget';\r\nimport { theme } from 'assets/styles/theme';\r\nimport img from 'assets/images/sky-bg.png';\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 40px 20px;\r\n  width: 600px;\r\n  height: 300px;\r\n  background-image: url(${img});\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  justify-content: center;\r\n  border-radius: 15px;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      <Wrapper>\r\n        <WeatherWidget />\r\n      </Wrapper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nconst resources = {\r\n  pl: {\r\n    translation: {\r\n      ButtonName: 'Pogoda',\r\n      'Nothing to geocode': 'Podaj prawidłowe dane',\r\n      'city not found': 'Nie znaleziono miasta',\r\n      InputPlaceholder: 'Wpisz miasto...',\r\n      Pressure: 'Ciśnienie',\r\n      Wind: 'Wiatr',\r\n      MaxTemp: 'Temp. max',\r\n      MinTemp: 'Temp. min',\r\n      Humidity: 'Wilgotność',\r\n      ShowMore: 'Pokaż więcej',\r\n      ShowLess: 'Pokaż mniej',\r\n    },\r\n  },\r\n  en: {\r\n    translation: {\r\n      ButtonName: 'Weather',\r\n      'Nothing to geocode': 'Incorrect data',\r\n      'city not found': 'City not found',\r\n      InputPlaceholder: 'Type your city...',\r\n      Pressure: 'Pressure',\r\n      Wind: 'Wind',\r\n      MaxTemp: 'Max temp.',\r\n      MinTemp: 'Min temp.',\r\n      Humidity: 'Humidity',\r\n      ShowMore: 'Show more',\r\n      ShowLess: 'Show less',\r\n    },\r\n  },\r\n  de: {\r\n    translation: {\r\n      ButtonName: 'Pogode',\r\n      'Nothing to geocode': 'Fehlerhafte Daten',\r\n      'city not found': 'Die Stadt wurde nicht gefunden',\r\n      InputPlaceholder: 'Die Stadt betreten...',\r\n      Pressure: 'Luftdruck',\r\n      Wind: 'Wind',\r\n      MaxTemp: 'Max temp.',\r\n      MinTemp: 'Min temp.',\r\n      Humidity: 'Feuchtigkeit',\r\n      ShowMore: 'Zeig mehr',\r\n      ShowLess: 'zeige weniger',\r\n    },\r\n  },\r\n};\r\n\r\ni18n.use(initReactI18next).init({\r\n  resources,\r\n  lng: 'pl',\r\n\r\n  interpolation: {\r\n    escapeValue: false,\r\n  },\r\n});\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './i18n';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}